%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 73 35 539 756
%%HiResBoundingBox: 73.000000 35.500000 539.000000 756.000000
%%Creator: gEDA gschem 1.8.1-20121123
%%CreationDate: Mon May 20 09:59:17 2013
%%Title: /home/john/projects/boxcom/implement/boards/usb/reva/schematics/current_monitor.sch
%%Author: john
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices
% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def
% Draw a dot
/dot {
    0 360 arc fill
} bind def
% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def
% Draw an arc segment
/darc {
    setlinewidth
    arc stroke
} bind def
% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall
    % Now draw it
    stroke
} bind def
% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     
% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def
% Font reincoding utilities
% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def
% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.
% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def
% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def
/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def
% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def
/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def
% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def
%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def
% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def
% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def
    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)
    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def
                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def
                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append
    grestore
    show
} bind def
% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def
/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars
    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont
    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text
	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def
%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 499 translate 90 rotate
0.588235 0.588235 scale
-39200 -39200 translate
gsave
39200 39200 56200 39200 10 line
56200 39200 56200 50200 10 line
56200 50200 39200 50200 10 line
39200 50200 39200 39200 10 line
51900 40000 51900 39400 10 line
gsave
false false false false 161.777776 [(FILE:) ] 0 48500 39800 144.444443 text
grestore
gsave
false false false false 161.777776 [(REVISION:) ] 0 52000 39800 144.444443 text
grestore
gsave
false false false false 161.777776 [(DRAWN BY: ) ] 0 52000 39500 144.444443 text
grestore
gsave
false false false false 161.777776 [(PAGE) ] 0 48500 39500 144.444443 text
grestore
gsave
false false false false 161.777776 [(OF) ] 0 50200 39500 144.444443 text
grestore
gsave
false false false false 161.777776 [(TITLE) ] 0 48500 40100 144.444443 text
grestore
48400 39400 56000 39400 10 line
56000 39400 56000 40800 10 line
56000 40800 48400 40800 10 line
48400 40800 48400 39400 10 line
48400 40000 56000 40000 10 line
39400 39400 56000 39400 10 line
56000 39400 56000 50000 10 line
56000 50000 39400 50000 10 line
39400 50000 39400 39400 10 line
39400 41200 39200 41200 10 line
39400 43200 39200 43200 10 line
39400 45200 39200 45200 10 line
39400 47200 39200 47200 10 line
41200 39400 41200 39200 10 line
43200 39400 43200 39200 10 line
45200 39400 45200 39200 10 line
47200 39400 47200 39200 10 line
49200 39400 49200 39200 10 line
gsave
true false true false 161.777776 [(A) ] 0 39300 40200 144.444443 text
grestore
gsave
true false true false 161.777776 [(B) ] 0 39300 42200 144.444443 text
grestore
gsave
true false true false 161.777776 [(C) ] 0 39300 44200 144.444443 text
grestore
gsave
true false true false 161.777776 [(D) ] 0 39300 46200 144.444443 text
grestore
gsave
true false true false 161.777776 [(1) ] 0 40200 39300 144.444443 text
grestore
gsave
true false true false 161.777776 [(2) ] 0 42200 39300 144.444443 text
grestore
gsave
true false true false 161.777776 [(3) ] 0 44200 39300 144.444443 text
grestore
gsave
true false true false 161.777776 [(4) ] 0 46200 39300 144.444443 text
grestore
gsave
true false true false 161.777776 [(5) ] 0 48200 39300 144.444443 text
grestore
39400 49200 39200 49200 10 line
gsave
true false true false 161.777776 [(E) ] 0 39300 48200 144.444443 text
grestore
gsave
true false true false 161.777776 [(F) ] 0 39300 49700 144.444443 text
grestore
51200 39400 51200 39200 10 line
53200 39400 53200 39200 10 line
gsave
true false true false 161.777776 [(6) ] 0 50200 39300 144.444443 text
grestore
gsave
true false true false 161.777776 [(7) ] 0 52200 39300 144.444443 text
grestore
gsave
true false true false 161.777776 [(8) ] 0 54200 39300 144.444443 text
grestore
55200 39400 55200 39200 10 line
gsave
true false true false 161.777776 [(9) ] 0 55700 39300 144.444443 text
grestore
56200 49200 56000 49200 10 line
56200 47200 56000 47200 10 line
56200 45200 56000 45200 10 line
56200 43200 56000 43200 10 line
56200 41200 56000 41200 10 line
gsave
true false true false 161.777776 [(A) ] 0 56100 40200 144.444443 text
grestore
gsave
true false true false 161.777776 [(B) ] 0 56100 42200 144.444443 text
grestore
gsave
true false true false 161.777776 [(C) ] 0 56100 44200 144.444443 text
grestore
gsave
true false true false 161.777776 [(D) ] 0 56100 46200 144.444443 text
grestore
gsave
true false true false 161.777776 [(E) ] 0 56100 48200 144.444443 text
grestore
gsave
true false true false 161.777776 [(F) ] 0 56100 49700 144.444443 text
grestore
41200 50200 41200 50000 10 line
43200 50200 43200 50000 10 line
45200 50200 45200 50000 10 line
47200 50200 47200 50000 10 line
49200 50200 49200 50000 10 line
51200 50200 51200 50000 10 line
53200 50200 53200 50000 10 line
55200 50200 55200 50000 10 line
gsave
true false true false 161.777776 [(1) ] 0 40200 50100 144.444443 text
grestore
gsave
true false true false 161.777776 [(2) ] 0 42200 50100 144.444443 text
grestore
gsave
true false true false 161.777776 [(3) ] 0 44200 50100 144.444443 text
grestore
gsave
true false true false 161.777776 [(4) ] 0 46200 50100 144.444443 text
grestore
gsave
true false true false 161.777776 [(5) ] 0 48200 50100 144.444443 text
grestore
gsave
true false true false 161.777776 [(6) ] 0 50200 50100 144.444443 text
grestore
gsave
true false true false 161.777776 [(7) ] 0 52200 50100 144.444443 text
grestore
gsave
true false true false 161.777776 [(8) ] 0 54200 50100 144.444443 text
grestore
gsave
true false true false 161.777776 [(9) ] 0 55700 50100 144.444443 text
grestore
grestore
gsave
false false false false 404.444448 [(Current monitor) ] 0 50900 40300 361.111115 text
grestore
gsave
false false false false 202.222224 [(5) ] 0 49400 39500 180.555557 text
grestore
gsave
false false false false 202.222224 [(6) ] 0 51000 39500 180.555557 text
grestore
gsave
false false false false 202.222224 [(current_monitor.sch) ] 0 49500 39800 180.555557 text
grestore
gsave
false false false false 202.222224 [(John Peck) ] 0 53000 39500 180.555557 text
grestore
gsave
false false false false 202.222224 [(A) ] 0 53000 39800 180.555557 text
grestore
gsave
42101 47501 41301 47501 10 line
41301 47501 41701 48101 10 line
41701 48101 42101 47501 10 line
41951 47601 41851 47601 10 line
41901 47651 41901 47551 10 line
41549 47601 41449 47601 10 line
41899 47001 41899 47301 10 line
gsave
false false false false 202.222224 [(4) ] 0 41744 47101 180.555557 text
grestore
41499 47001 41499 47301 10 line
gsave
false false false false 202.222224 [(3) ] 0 41344 47101 180.555557 text
grestore
42501 48501 42201 48501 10 line
gsave
false false false false 202.222224 [(1) ] 0 42301 48551 180.555557 text
grestore
41400 48400 41400 48000 10 line
41400 48150 41100 48000 10 line
41400 48250 41100 48400 10 line
10 setlinewidth
41303 48141 moveto 41400 48150 lineto 41331 48077 lineto 41323 48111 lineto closepath stroke
41303 48141 moveto 41400 48150 lineto 41331 48077 lineto 41323 48111 lineto closepath fill
41700 48100 41700 48200 10 line
41700 48200 41400 48200 10 line
41500 47500 41500 47400 10 line
41500 47400 41100 47400 10 line
41100 47400 41100 48000 10 line
41100 48400 41100 48500 10 line
41100 48500 42200 48500 10 line
41500 47400 41500 47300 10 line
41900 47500 41900 47300 10 line
41000 47300 42200 47300 10 line
42200 47300 42200 48600 10 line
42200 48600 41000 48600 10 line
41000 48600 41000 47300 10 line
grestore
gsave
false false false false 202.222224 [(lt6106) ] 0 42251 47301 180.555557 text
grestore
gsave
false false false false 202.222224 [(U500) ] 0 42251 47491 180.555557 text
grestore
gsave
41900 42400 41950 42500 10 line
41950 42500 42050 42300 10 line
42050 42300 42150 42500 10 line
42150 42500 42250 42300 10 line
42250 42300 42350 42500 10 line
42350 42500 42450 42300 10 line
42450 42300 42500 42400 10 line
42800 42400 42500 42400 10 line
41600 42400 41900 42400 10 line
grestore
gsave
false false false false 202.222224 [(R509) ] 0 42100 42600 180.555557 text
grestore
gsave
false false false false 202.222224 [(10) ] 0 42100 42100 180.555557 text
grestore
gsave
43500 41800 43100 41800 10 line
43500 41700 43100 41700 10 line
43300 42000 43300 41800 10 line
43300 41700 43300 41500 10 line
43300 42300 43300 42000 10 line
43300 41200 43300 41500 10 line
grestore
gsave
false false false false 202.222224 [(C504) ] 0 43600 41800 180.555557 text
grestore
gsave
false false false false 202.222224 [(100n) ] 0 43600 41600 180.555557 text
grestore
gsave
41300 42950 50 0 360 10 darc
41300 42900 41300 42600 10 line
gsave
false false false false 202.222224 [(Vbus) ] 0 41100 43050 180.555557 text
grestore
grestore
gsave
43300 40700 43300 40500 10 line
43450 40500 43150 40500 10 line
43150 40500 43300 40350 10 line
43300 40350 43450 40500 10 line
gsave
false false false false 202.222224 [(bus) ] 0 43400 40300 180.555557 text
grestore
grestore
43300 41200 43300 40700 10 line
44200 41100 44200 40900 10 line
42800 42400 44200 42400 10 line
44200 42400 44200 42300 10 line
43300 42300 43300 42400 10 line
41300 42600 41300 42400 10 line
41300 42400 41600 42400 10 line
gsave
false false false false 202.222224 [(Set output voltage scaling such) (that 10mA sensed gives 1V output.) ] 0 44400 49100 180.555557 text
grestore
gsave
41400 45000 41450 45100 10 line
41450 45100 41550 44900 10 line
41550 44900 41650 45100 10 line
41650 45100 41750 44900 10 line
41750 44900 41850 45100 10 line
41850 45100 41950 44900 10 line
41950 44900 42000 45000 10 line
42300 45000 42000 45000 10 line
41100 45000 41400 45000 10 line
newpath
42300 45000
25
0 360 arc
fill
newpath
41100 45000
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R504) ] 0 41600 45200 180.555557 text
grestore
gsave
false false false false 202.222224 [(1.00) ] 0 41500 44700 180.555557 text
grestore
gsave
false false false false 202.222224 [(Rsense) ] 0 41400 44500 180.555557 text
grestore
41100 46600 41500 46600 10 line
41500 46600 41500 47001 10 line
41500 47001 41499 47001 10 line
42300 46600 41900 46600 10 line
41900 46600 41900 47001 10 line
41900 47001 41899 47001 10 line
gsave
41100 46100 41200 46050 10 line
41200 46050 41000 45950 10 line
41000 45950 41200 45850 10 line
41200 45850 41000 45750 10 line
41000 45750 41200 45650 10 line
41200 45650 41000 45550 10 line
41000 45550 41100 45500 10 line
41100 45200 41100 45500 10 line
41100 46400 41100 46100 10 line
grestore
gsave
false false false false 202.222224 [(R502) ] 0 41300 45900 180.555557 text
grestore
gsave
false false false false 202.222224 [(100) ] 0 41300 45700 180.555557 text
grestore
gsave
false false false false 202.222224 [(Rin) ] 0 41300 45500 180.555557 text
grestore
gsave
42300 46100 42400 46050 10 line
42400 46050 42200 45950 10 line
42200 45950 42400 45850 10 line
42400 45850 42200 45750 10 line
42200 45750 42400 45650 10 line
42400 45650 42200 45550 10 line
42200 45550 42300 45500 10 line
42300 45200 42300 45500 10 line
42300 46400 42300 46100 10 line
grestore
gsave
false false false false 202.222224 [(R503) ] 0 42500 45900 180.555557 text
grestore
gsave
false false false false 202.222224 [(100) ] 0 42500 45700 180.555557 text
grestore
gsave
false false false false 202.222224 [(Rin) ] 0 42500 45500 180.555557 text
grestore
42300 45200 42300 45000 10 line
41100 45200 41100 45000 10 line
41100 46400 41100 46600 10 line
42300 46400 42300 46600 10 line
gsave
false false false false 202.222224 [(Balanced Rin resistors) (reduces drift due to input) (bias current.) ] 0 42900 45500 180.555557 text
grestore
42800 48900 43500 48900 10 line
43500 48900 43400 49000 10 line
43500 48900 43400 48800 10 line
gsave
false false false false 202.222224 [(Iout) ] 0 43000 49000 180.555557 text
grestore
gsave
false false false false 202.222224 [(Iout = Iin) ] 0 40500 49200 180.555557 text
grestore
41800 49300 500 135 225 10 darc
41800 49300 500 315 405 10 darc
gsave
false false false false 202.222224 [(Rsense) ] 0 41500 49400 180.555557 text
grestore
gsave
false false false false 202.222224 [(Rin) ] 0 41600 49100 180.555557 text
grestore
41400 49300 42200 49300 10 line
gsave
44100 48000 44200 47950 10 line
44200 47950 44000 47850 10 line
44000 47850 44200 47750 10 line
44200 47750 44000 47650 10 line
44000 47650 44200 47550 10 line
44200 47550 44000 47450 10 line
44000 47450 44100 47400 10 line
44100 47100 44100 47400 10 line
44100 48300 44100 48000 10 line
grestore
gsave
false false false false 202.222224 [(R501) ] 0 44300 47800 180.555557 text
grestore
gsave
false false false false 202.222224 [(10.0k) ] 0 44300 47600 180.555557 text
grestore
gsave
false false false false 202.222224 [(Riv) ] 0 44300 47400 180.555557 text
grestore
gsave
43400 47800 43000 47800 10 line
43400 47700 43000 47700 10 line
43200 48000 43200 47800 10 line
43200 47700 43200 47500 10 line
43200 48300 43200 48000 10 line
43200 47200 43200 47500 10 line
grestore
gsave
false false false false 202.222224 [(C500) ] 0 43500 47800 180.555557 text
grestore
gsave
false false false false 202.222224 [(1.0n) ] 0 43500 47600 180.555557 text
grestore
gsave
false false false false 202.222224 [(Cfil) ] 0 43500 47400 180.555557 text
grestore
44100 48500 44100 48300 10 line
43200 48300 43200 48500 10 line
gsave
44100 46700 44100 46500 10 line
44250 46500 43950 46500 10 line
43950 46500 44100 46350 10 line
44100 46350 44250 46500 10 line
gsave
false false false false 202.222224 [(ana) ] 0 44200 46300 180.555557 text
grestore
grestore
43200 46900 43200 47200 10 line
44100 46700 44100 47100 10 line
43200 46900 44100 46900 10 line
42501 48500 44600 48500 10 line
42501 48500 42501 48501 10 line
gsave
44900 48500 44950 48600 10 line
44950 48600 45050 48400 10 line
45050 48400 45150 48600 10 line
45150 48600 45250 48400 10 line
45250 48400 45350 48600 10 line
45350 48600 45450 48400 10 line
45450 48400 45500 48500 10 line
45800 48500 45500 48500 10 line
44600 48500 44900 48500 10 line
grestore
gsave
false false false false 202.222224 [(R500) ] 0 45100 48700 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.0) ] 0 45100 48200 180.555557 text
grestore
gsave
46600 48100 46300 48100 10 line
gsave
false true false false 202.222224 [(2) ] 0 46505 48145 180.555557 text
grestore
46600 48500 46300 48500 10 line
gsave
false true false false 202.222224 [(1) ] 0 46505 48545 180.555557 text
grestore
46600 48000 47000 48000 10 line
47000 48600 46600 48600 10 line
46600 48600 46600 48000 10 line
47000 48600 47000 48000 10 line
46800 48500 50 0 360 10 darc
46800 48101 50 0 360 10 darc
46750 48500 46600 48500 10 line
46750 48100 46600 48100 10 line
47000 48600 47100 48600 10 line
47100 48600 47100 48000 10 line
47100 48000 47000 48000 10 line
grestore
gsave
false false false false 202.222224 [(mta100) ] 0 46600 47800 180.555557 text
grestore
gsave
false false false false 202.222224 [(J500) ] 0 46600 48700 180.555557 text
grestore
gsave
false false false false 202.222224 [(Isense) ] 0 46600 47600 180.555557 text
grestore
45800 48500 46300 48500 10 line
gsave
46300 47600 46300 47400 10 line
46450 47400 46150 47400 10 line
46150 47400 46300 47250 10 line
46300 47250 46450 47400 10 line
gsave
false false false false 202.222224 [(ana) ] 0 46400 47200 180.555557 text
grestore
grestore
46300 48100 46300 47600 10 line
gsave
40300 45550 50 0 360 10 darc
40300 45500 40300 45200 10 line
gsave
false false false false 202.222224 [(Vbus) ] 0 40100 45650 180.555557 text
grestore
grestore
40300 45200 40300 45000 10 line
40300 45000 41100 45000 10 line
gsave
51200 44100 50800 44100 10 line
51200 44000 50800 44000 10 line
51000 44300 51000 44100 10 line
51000 44000 51000 43800 10 line
51000 44600 51000 44300 10 line
51000 43500 51000 43800 10 line
grestore
gsave
false false false false 202.222224 [(2.2u) ] 0 51300 43900 180.555557 text
grestore
gsave
false false false false 202.222224 [(C502) ] 0 51300 44100 180.555557 text
grestore
49700 45000 52400 45000 10 line
48800 44100 48800 43800 10 line
47900 43800 47900 43900 10 line
47900 43900 48800 43900 10 line
47100 42500 51000 42500 10 line
51000 42500 51000 43500 10 line
47900 42700 47900 42500 10 line
48800 42600 48800 42500 10 line
47100 41900 47100 43500 10 line
45300 45000 47900 45000 10 line
49900 44600 49900 45000 10 line
49900 43400 49900 42500 10 line
gsave
48200 45200 49400 45200 10 line
49400 45200 49400 44400 10 line
49400 44400 48200 44400 10 line
48200 44400 48200 45200 10 line
47900 45000 48200 45000 10 line
gsave
false false false false 202.222224 [(Vin) ] 0 48255 44995 180.555557 text
grestore
gsave
false true false false 202.222224 [(3) ] 0 48105 45045 180.555557 text
grestore
49700 45000 49400 45000 10 line
gsave
false true false false 202.222224 [(Vout) ] 0 49345 44995 180.555557 text
grestore
gsave
false false false false 202.222224 [(2) ] 0 49495 45045 180.555557 text
grestore
48800 44100 48800 44400 10 line
gsave
false false false false 202.222224 [(Set) ] 0 48655 44450 180.555557 text
grestore
gsave
false false false false 202.222224 [(1) ] 0 48645 44200 180.555557 text
grestore
49700 44700 49400 44700 10 line
gsave
false true false false 202.222224 [(Vout) ] 0 49345 44695 180.555557 text
grestore
gsave
false false false false 202.222224 [(4) ] 0 49495 44745 180.555557 text
grestore
grestore
gsave
false false false false 202.222224 [(lt3080est) ] 0 48195 45295 180.555557 text
grestore
gsave
false false false false 202.222224 [(U501) ] 0 48195 45495 180.555557 text
grestore
49700 44700 49900 44700 10 line
gsave
47300 44100 46900 44100 10 line
47300 44000 46900 44000 10 line
47100 44300 47100 44100 10 line
47100 44000 47100 43800 10 line
47100 44600 47100 44300 10 line
47100 43500 47100 43800 10 line
grestore
gsave
false false false false 202.222224 [(C501) ] 0 47400 44100 180.555557 text
grestore
gsave
false false false false 202.222224 [(1.0u) ] 0 47400 43900 180.555557 text
grestore
gsave
47100 41900 47100 41700 10 line
47250 41700 46950 41700 10 line
46950 41700 47100 41550 10 line
47100 41550 47250 41700 10 line
gsave
false false false false 202.222224 [(ana) ] 0 47200 41500 180.555557 text
grestore
grestore
47100 44600 47100 45000 10 line
42300 45000 44100 45000 10 line
gsave
49900 44300 50000 44250 10 line
50000 44250 49800 44150 10 line
49800 44150 50000 44050 10 line
50000 44050 49800 43950 10 line
49800 43950 50000 43850 10 line
50000 43850 49800 43750 10 line
49800 43750 49900 43700 10 line
49900 43400 49900 43700 10 line
49900 44600 49900 44300 10 line
grestore
gsave
false false false false 202.222224 [(3.3k) ] 0 50100 43900 180.555557 text
grestore
gsave
false false false false 202.222224 [(R507) ] 0 50100 44100 180.555557 text
grestore
gsave
48800 43500 48900 43450 10 line
48900 43450 48700 43350 10 line
48700 43350 48900 43250 10 line
48900 43250 48700 43150 10 line
48700 43150 48900 43050 10 line
48900 43050 48700 42950 10 line
48700 42950 48800 42900 10 line
48800 42600 48800 42900 10 line
48800 43800 48800 43500 10 line
grestore
gsave
false false false false 202.222224 [(330k) ] 0 49000 43100 180.555557 text
grestore
gsave
false false false false 202.222224 [(R508) ] 0 49000 43300 180.555557 text
grestore
gsave
54600 44600 54300 44600 10 line
gsave
false true false false 202.222224 [(2) ] 0 54505 44645 180.555557 text
grestore
54600 45000 54300 45000 10 line
gsave
false true false false 202.222224 [(1) ] 0 54505 45045 180.555557 text
grestore
54600 44500 55000 44500 10 line
55000 45100 54600 45100 10 line
54600 45100 54600 44500 10 line
55000 45100 55000 44500 10 line
54800 45000 50 0 360 10 darc
54800 44601 50 0 360 10 darc
54750 45000 54600 45000 10 line
54750 44600 54600 44600 10 line
55000 45100 55100 45100 10 line
55100 45100 55100 44500 10 line
55100 44500 55000 44500 10 line
grestore
gsave
false false false false 202.222224 [(mta100) ] 0 54600 44300 180.555557 text
grestore
gsave
false false false false 202.222224 [(J501) ] 0 54600 45200 180.555557 text
grestore
gsave
54300 44100 54300 43900 10 line
54450 43900 54150 43900 10 line
54150 43900 54300 43750 10 line
54300 43750 54450 43900 10 line
gsave
false false false false 202.222224 [(ana) ] 0 54400 43700 180.555557 text
grestore
grestore
53600 45000 54300 45000 10 line
54300 44600 54300 44100 10 line
gsave
52700 45000 52750 45100 10 line
52750 45100 52850 44900 10 line
52850 44900 52950 45100 10 line
52950 45100 53050 44900 10 line
53050 44900 53150 45100 10 line
53150 45100 53250 44900 10 line
53250 44900 53300 45000 10 line
53600 45000 53300 45000 10 line
52400 45000 52700 45000 10 line
grestore
gsave
false false false false 202.222224 [(R506) ] 0 52900 45200 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.0) ] 0 52900 44700 180.555557 text
grestore
gsave
44400 45000 44450 45100 10 line
44450 45100 44550 44900 10 line
44550 44900 44650 45100 10 line
44650 45100 44750 44900 10 line
44750 44900 44850 45100 10 line
44850 45100 44950 44900 10 line
44950 44900 45000 45000 10 line
45300 45000 45000 45000 10 line
44100 45000 44400 45000 10 line
grestore
gsave
false false false false 202.222224 [(R505) ] 0 44600 45200 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.0) ] 0 44600 44700 180.555557 text
grestore
gsave
48100 43300 47700 43300 10 line
48100 43200 47700 43200 10 line
47900 43500 47900 43300 10 line
47900 43200 47900 43000 10 line
47900 43800 47900 43500 10 line
47900 42700 47900 43000 10 line
grestore
gsave
false false false false 202.222224 [(C503) ] 0 48200 43300 180.555557 text
grestore
gsave
false false false false 202.222224 [(3.3n) ] 0 48200 43100 180.555557 text
grestore
gsave
false false false false 202.222224 [(Vout = Rset x 10uA) ] 0 48100 42200 180.555557 text
grestore
gsave
false false false false 202.222224 [(Minimum load current for lt3080) (is 1mA \(maximum\).  Choose Rlmin) (to flow this current.) ] 0 51200 42500 180.555557 text
grestore
gsave
false false false false 202.222224 [(lt3080 has a dropout) (voltage of 1.2V with) (100mA load.) ] 0 48200 45900 180.555557 text
grestore
gsave
false false false false 202.222224 [(Rset) ] 0 49000 42900 180.555557 text
grestore
gsave
false false false false 202.222224 [(Rlmin) ] 0 50100 43700 180.555557 text
grestore
gsave
false false false false 202.222224 [(lt3080 in SOT-223 package has) (junction-to-ambient tempco of) (55 C/W, 125C max junction temp.) (This allows about 1A for) (5V --> 3.3V) ] 0 49900 41300 180.555557 text
grestore
gsave
false false false false 202.222224 [(100mA max output) (limited by USB) ] 0 52400 43900 180.555557 text
grestore
51000 44600 51000 45000 10 line
gsave
51600 45700 51600 45400 10 line
51500 45900 51500 45700 10 line
51500 45700 51700 45700 10 line
51700 45700 51700 45900 10 line
51700 45900 51500 45900 10 line
51600 46000 100 0 360 10 darc
51600 46000 50 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(TP500) ] 0 51750 45950 180.555557 text
grestore
gsave
false false false false 202.222224 [(+3.3V_mon) ] 0 51750 45764 180.555557 text
grestore
51600 45400 51600 45000 10 line
gsave
false false false false 202.222224 [(lt6016 has an output bandwidth) (of 200kHz.) ] 0 44500 46700 180.555557 text
grestore
gsave
44100 42100 44100 41300 10 line
44100 41300 44600 41700 10 line
44600 41700 44100 42100 10 line
44200 42300 44200 42000 10 line
gsave
false false false false 202.222224 [(5) ] 0 44250 42100 180.555557 text
grestore
gsave
false false false false 202.222224 [(V+) ] 0 44150 41800 180.555557 text
grestore
44200 41100 44200 41400 10 line
gsave
false false false false 202.222224 [(2) ] 0 44250 41200 180.555557 text
grestore
gsave
false false false false 202.222224 [(V-) ] 0 44150 41450 180.555557 text
grestore
grestore
gsave
false false false false 202.222224 [(U500) ] 0 44494 41400 180.555557 text
grestore
gsave
false false false false 202.222224 [(lt6106) ] 0 44500 41214 180.555557 text
grestore
44200 40900 43300 40900 10 line
newpath
43300 40900
25
0 360 arc
fill
newpath
43300 42400
25
0 360 arc
fill
newpath
43300 42400
25
0 360 arc
fill
newpath
43300 42400
25
0 360 arc
fill
newpath
42300 45000
25
0 360 arc
fill
newpath
41100 45000
25
0 360 arc
fill
newpath
42300 45000
25
0 360 arc
fill
newpath
41100 45000
25
0 360 arc
fill
newpath
44100 48500
25
0 360 arc
fill
newpath
44100 48500
25
0 360 arc
fill
newpath
43200 48500
25
0 360 arc
fill
newpath
43200 48500
25
0 360 arc
fill
newpath
44100 46900
25
0 360 arc
fill
newpath
44100 46900
25
0 360 arc
fill
newpath
44100 46900
25
0 360 arc
fill
newpath
44100 48500
25
0 360 arc
fill
newpath
43200 48500
25
0 360 arc
fill
newpath
41100 45000
25
0 360 arc
fill
newpath
49900 45000
25
0 360 arc
fill
newpath
51000 45000
25
0 360 arc
fill
newpath
51600 45000
25
0 360 arc
fill
newpath
48800 43900
25
0 360 arc
fill
newpath
48800 43900
25
0 360 arc
fill
newpath
48800 43900
25
0 360 arc
fill
newpath
47100 42500
25
0 360 arc
fill
newpath
47900 42500
25
0 360 arc
fill
newpath
48800 42500
25
0 360 arc
fill
newpath
47100 42500
25
0 360 arc
fill
newpath
49900 42500
25
0 360 arc
fill
newpath
47900 42500
25
0 360 arc
fill
newpath
47900 42500
25
0 360 arc
fill
newpath
48800 42500
25
0 360 arc
fill
newpath
48800 42500
25
0 360 arc
fill
newpath
47100 42500
25
0 360 arc
fill
newpath
47100 45000
25
0 360 arc
fill
newpath
49900 45000
25
0 360 arc
fill
newpath
49900 45000
25
0 360 arc
fill
newpath
49900 44700
25
0 360 arc
fill
newpath
49900 42500
25
0 360 arc
fill
newpath
49900 42500
25
0 360 arc
fill
newpath
49900 44700
25
0 360 arc
fill
newpath
49900 44700
25
0 360 arc
fill
newpath
47100 45000
25
0 360 arc
fill
newpath
47100 45000
25
0 360 arc
fill
newpath
42300 45000
25
0 360 arc
fill
newpath
51000 45000
25
0 360 arc
fill
newpath
51000 45000
25
0 360 arc
fill
newpath
51600 45000
25
0 360 arc
fill
newpath
51600 45000
25
0 360 arc
fill
newpath
43300 40900
25
0 360 arc
fill
newpath
43300 40900
25
0 360 arc
fill
showpage
%%End
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
