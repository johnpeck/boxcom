%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 73 35 539 756
%%HiResBoundingBox: 73.000000 35.500000 539.000000 756.000000
%%Creator: gEDA gschem 1.8.1-20121123
%%CreationDate: Mon May 20 09:51:03 2013
%%Title: /home/john/projects/boxcom/implement/boards/usb/reva/schematics/rs232io.sch
%%Author: john
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices
% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def
% Draw a dot
/dot {
    0 360 arc fill
} bind def
% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def
% Draw an arc segment
/darc {
    setlinewidth
    arc stroke
} bind def
% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall
    % Now draw it
    stroke
} bind def
% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     
% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def
% Font reincoding utilities
% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def
% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.
% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def
% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def
/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def
% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def
/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def
% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def
%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def
% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def
% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def
    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)
    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def
                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def
                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append
    grestore
    show
} bind def
% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def
/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars
    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont
    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text
	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def
%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 499 translate 90 rotate
0.588235 0.588235 scale
-39400 -39500 translate
gsave
39400 39500 56400 39500 10 line
56400 39500 56400 50500 10 line
56400 50500 39400 50500 10 line
39400 50500 39400 39500 10 line
52100 40300 52100 39700 10 line
gsave
false false false false 161.777776 [(FILE:) ] 0 48700 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(REVISION:) ] 0 52200 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(DRAWN BY: ) ] 0 52200 39800 144.444443 text
grestore
gsave
false false false false 161.777776 [(PAGE) ] 0 48700 39800 144.444443 text
grestore
gsave
false false false false 161.777776 [(OF) ] 0 50400 39800 144.444443 text
grestore
gsave
false false false false 161.777776 [(TITLE) ] 0 48700 40400 144.444443 text
grestore
48600 39700 56200 39700 10 line
56200 39700 56200 41100 10 line
56200 41100 48600 41100 10 line
48600 41100 48600 39700 10 line
48600 40300 56200 40300 10 line
39600 39700 56200 39700 10 line
56200 39700 56200 50300 10 line
56200 50300 39600 50300 10 line
39600 50300 39600 39700 10 line
39600 41500 39400 41500 10 line
39600 43500 39400 43500 10 line
39600 45500 39400 45500 10 line
39600 47500 39400 47500 10 line
41400 39700 41400 39500 10 line
43400 39700 43400 39500 10 line
45400 39700 45400 39500 10 line
47400 39700 47400 39500 10 line
49400 39700 49400 39500 10 line
gsave
true false true false 161.777776 [(A) ] 0 39500 40500 144.444443 text
grestore
gsave
true false true false 161.777776 [(B) ] 0 39500 42500 144.444443 text
grestore
gsave
true false true false 161.777776 [(C) ] 0 39500 44500 144.444443 text
grestore
gsave
true false true false 161.777776 [(D) ] 0 39500 46500 144.444443 text
grestore
gsave
true false true false 161.777776 [(1) ] 0 40400 39600 144.444443 text
grestore
gsave
true false true false 161.777776 [(2) ] 0 42400 39600 144.444443 text
grestore
gsave
true false true false 161.777776 [(3) ] 0 44400 39600 144.444443 text
grestore
gsave
true false true false 161.777776 [(4) ] 0 46400 39600 144.444443 text
grestore
gsave
true false true false 161.777776 [(5) ] 0 48400 39600 144.444443 text
grestore
39600 49500 39400 49500 10 line
gsave
true false true false 161.777776 [(E) ] 0 39500 48500 144.444443 text
grestore
gsave
true false true false 161.777776 [(F) ] 0 39500 50000 144.444443 text
grestore
51400 39700 51400 39500 10 line
53400 39700 53400 39500 10 line
gsave
true false true false 161.777776 [(6) ] 0 50400 39600 144.444443 text
grestore
gsave
true false true false 161.777776 [(7) ] 0 52400 39600 144.444443 text
grestore
gsave
true false true false 161.777776 [(8) ] 0 54400 39600 144.444443 text
grestore
55400 39700 55400 39500 10 line
gsave
true false true false 161.777776 [(9) ] 0 55900 39600 144.444443 text
grestore
56400 49500 56200 49500 10 line
56400 47500 56200 47500 10 line
56400 45500 56200 45500 10 line
56400 43500 56200 43500 10 line
56400 41500 56200 41500 10 line
gsave
true false true false 161.777776 [(A) ] 0 56300 40500 144.444443 text
grestore
gsave
true false true false 161.777776 [(B) ] 0 56300 42500 144.444443 text
grestore
gsave
true false true false 161.777776 [(C) ] 0 56300 44500 144.444443 text
grestore
gsave
true false true false 161.777776 [(D) ] 0 56300 46500 144.444443 text
grestore
gsave
true false true false 161.777776 [(E) ] 0 56300 48500 144.444443 text
grestore
gsave
true false true false 161.777776 [(F) ] 0 56300 50000 144.444443 text
grestore
41400 50500 41400 50300 10 line
43400 50500 43400 50300 10 line
45400 50500 45400 50300 10 line
47400 50500 47400 50300 10 line
49400 50500 49400 50300 10 line
51400 50500 51400 50300 10 line
53400 50500 53400 50300 10 line
55400 50500 55400 50300 10 line
gsave
true false true false 161.777776 [(1) ] 0 40400 50400 144.444443 text
grestore
gsave
true false true false 161.777776 [(2) ] 0 42400 50400 144.444443 text
grestore
gsave
true false true false 161.777776 [(3) ] 0 44400 50400 144.444443 text
grestore
gsave
true false true false 161.777776 [(4) ] 0 46400 50400 144.444443 text
grestore
gsave
true false true false 161.777776 [(5) ] 0 48400 50400 144.444443 text
grestore
gsave
true false true false 161.777776 [(6) ] 0 50400 50400 144.444443 text
grestore
gsave
true false true false 161.777776 [(7) ] 0 52400 50400 144.444443 text
grestore
gsave
true false true false 161.777776 [(8) ] 0 54400 50400 144.444443 text
grestore
gsave
true false true false 161.777776 [(9) ] 0 55900 50400 144.444443 text
grestore
grestore
gsave
false false false false 404.444448 [(RS-232 I/O) ] 0 51700 40600 361.111115 text
grestore
gsave
false false false false 202.222224 [(3) ] 0 49700 39800 180.555557 text
grestore
gsave
false false false false 202.222224 [(6) ] 0 51300 39800 180.555557 text
grestore
gsave
false false false false 202.222224 [(rs232io.sch) ] 0 50000 40100 180.555557 text
grestore
gsave
false false false false 202.222224 [(John Peck) ] 0 53200 39800 180.555557 text
grestore
gsave
false false false false 202.222224 [(A) ] 0 53200 40100 180.555557 text
grestore
gsave
47500 47800 47200 47800 10 line
gsave
false true false false 202.222224 [(16) ] 0 47405 47845 180.555557 text
grestore
gsave
false false false false 202.222224 [(Vcc) ] 0 47600 47795 180.555557 text
grestore
47500 43400 49100 43400 10 line
49100 43400 49100 48200 10 line
49100 48200 47500 48200 10 line
47500 48200 47500 43400 10 line
48300 43400 48300 43100 10 line
gsave
false false false false 202.222224 [(15) ] 0 48045 43200 180.555557 text
grestore
gsave
false false false false 202.222224 [(Gnd) ] 90 48300 43455 180.555557 text
grestore
49100 47200 49400 47200 10 line
gsave
false false false false 202.222224 [(14) ] 0 49195 47245 180.555557 text
grestore
gsave
false true false false 202.222224 [(Dout1) ] 0 49045 47195 180.555557 text
grestore
47500 47200 47200 47200 10 line
gsave
false true false false 202.222224 [(11) ] 0 47405 47245 180.555557 text
grestore
gsave
false false false false 202.222224 [(Din1) ] 0 47600 47195 180.555557 text
grestore
47500 46200 47200 46200 10 line
gsave
false true false false 202.222224 [(10) ] 0 47405 46245 180.555557 text
grestore
gsave
false false false false 202.222224 [(Din2) ] 0 47600 46195 180.555557 text
grestore
49100 46200 49400 46200 10 line
gsave
false false false false 202.222224 [(7) ] 0 49195 46245 180.555557 text
grestore
gsave
false true false false 202.222224 [(Dout2) ] 0 49045 46195 180.555557 text
grestore
49100 46800 49400 46800 10 line
gsave
false false false false 202.222224 [(13) ] 0 49195 46845 180.555557 text
grestore
gsave
false true false false 202.222224 [(Rin1) ] 0 49045 46795 180.555557 text
grestore
47500 46800 47200 46800 10 line
gsave
false true false false 202.222224 [(12) ] 0 47405 46845 180.555557 text
grestore
gsave
false false false false 202.222224 [(Rout1) ] 0 47600 46795 180.555557 text
grestore
49100 45800 49400 45800 10 line
gsave
false false false false 202.222224 [(8) ] 0 49195 45845 180.555557 text
grestore
gsave
false true false false 202.222224 [(Rin2) ] 0 49045 45795 180.555557 text
grestore
47500 45800 47200 45800 10 line
gsave
false true false false 202.222224 [(9) ] 0 47405 45845 180.555557 text
grestore
gsave
false false false false 202.222224 [(Rout2) ] 0 47600 45795 180.555557 text
grestore
47800 43400 47800 43100 10 line
gsave
false false false false 202.222224 [(2) ] 0 47645 43200 180.555557 text
grestore
gsave
false false false false 202.222224 [(V+) ] 90 47800 43455 180.555557 text
grestore
48800 43400 48800 43100 10 line
gsave
false false false false 202.222224 [(6) ] 0 48645 43200 180.555557 text
grestore
gsave
false false false false 202.222224 [(V-) ] 90 48800 43455 180.555557 text
grestore
47500 45200 47200 45200 10 line
gsave
false true false false 202.222224 [(1) ] 0 47405 45245 180.555557 text
grestore
gsave
false false false false 202.222224 [(C1+) ] 0 47600 45195 180.555557 text
grestore
47500 44100 47200 44100 10 line
gsave
false true false false 202.222224 [(3) ] 0 47405 44145 180.555557 text
grestore
gsave
false false false false 202.222224 [(C1-) ] 0 47600 44095 180.555557 text
grestore
49100 45200 49400 45200 10 line
gsave
false false false false 202.222224 [(4) ] 0 49195 45245 180.555557 text
grestore
gsave
false true false false 202.222224 [(C2+) ] 0 49045 45195 180.555557 text
grestore
49100 44100 49400 44100 10 line
gsave
false false false false 202.222224 [(5) ] 0 49195 44145 180.555557 text
grestore
gsave
false true false false 202.222224 [(C2-) ] 0 49045 44095 180.555557 text
grestore
60 60 49370 46170 fbox
60 60 47170 45770 fbox
grestore
gsave
false false false false 202.222224 [(trs202ecd) ] 0 47500 48300 180.555557 text
grestore
gsave
false false false false 202.222224 [(U300) ] 0 47500 48500 180.555557 text
grestore
gsave
53000 46800 52700 46800 10 line
gsave
false true false false 202.222224 [(2) ] 0 52905 46845 180.555557 text
grestore
53000 47200 52700 47200 10 line
gsave
false true false false 202.222224 [(1) ] 0 52905 47245 180.555557 text
grestore
53000 46300 53400 46300 10 line
53400 47300 53000 47300 10 line
53000 47300 53000 46300 10 line
53400 47300 53400 46300 10 line
53200 47200 50 0 360 10 darc
53200 46801 50 0 360 10 darc
53150 47200 53000 47200 10 line
53150 46800 53000 46800 10 line
53400 47300 53500 47300 10 line
53500 47300 53500 46300 10 line
53500 46300 53400 46300 10 line
53200 46401 50 0 360 10 darc
53150 46400 53000 46400 10 line
53000 46400 52700 46400 10 line
gsave
false true false false 202.222224 [(3) ] 0 52905 46445 180.555557 text
grestore
grestore
gsave
false false false false 202.222224 [(mta100) ] 0 53000 46100 180.555557 text
grestore
gsave
false false false false 202.222224 [(J300) ] 0 53000 47400 180.555557 text
grestore
gsave
false false false false 202.222224 [(trs202 receiver inputs) (terminated in 5k) ] 0 51300 44400 180.555557 text
grestore
gsave
52500 46200 52500 46000 10 line
52650 46000 52350 46000 10 line
52350 46000 52500 45850 10 line
52500 45850 52650 46000 10 line
gsave
false false false false 202.222224 [(ana) ] 0 52600 45800 180.555557 text
grestore
grestore
52500 46200 52500 46400 10 line
52500 46400 52700 46400 10 line
gsave
false false false false 202.222224 [(Connect Rins on trs202 to) (transmit \(TxD\) lines from) (Butterfly.) ] 0 48800 49000 180.555557 text
grestore
gsave
49900 47200 49950 47300 10 line
49950 47300 50050 47100 10 line
50050 47100 50150 47300 10 line
50150 47300 50250 47100 10 line
50250 47100 50350 47300 10 line
50350 47300 50450 47100 10 line
50450 47100 50500 47200 10 line
50800 47200 50500 47200 10 line
49600 47200 49900 47200 10 line
grestore
gsave
false false false false 202.222224 [(R301) ] 0 50100 47400 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.0) ] 0 50100 46900 180.555557 text
grestore
gsave
50700 46800 50750 46900 10 line
50750 46900 50850 46700 10 line
50850 46700 50950 46900 10 line
50950 46900 51050 46700 10 line
51050 46700 51150 46900 10 line
51150 46900 51250 46700 10 line
51250 46700 51300 46800 10 line
51600 46800 51300 46800 10 line
50400 46800 50700 46800 10 line
grestore
gsave
false false false false 202.222224 [(R303) ] 0 50900 47000 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.0) ] 0 50900 46500 180.555557 text
grestore
49400 47200 49600 47200 10 line
50800 47200 52700 47200 10 line
gsave
false false false false 202.222224 [(bfly_rxd) ] 0 52100 47300 180.555557 text
grestore
49400 46800 50400 46800 10 line
51600 46800 52700 46800 10 line
gsave
false false false false 202.222224 [(bfly_txd) ] 0 52100 46900 180.555557 text
grestore
gsave
51800 47800 51800 47500 10 line
51700 48000 51700 47800 10 line
51700 47800 51900 47800 10 line
51900 47800 51900 48000 10 line
51900 48000 51700 48000 10 line
51800 48100 100 0 360 10 darc
51800 48100 50 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(TP301) ] 0 51950 48050 180.555557 text
grestore
gsave
false false false false 202.222224 [(RS-232 output) ] 0 51950 47864 180.555557 text
grestore
51800 47500 51800 47200 10 line
gsave
52300 45200 52300 44900 10 line
52200 45400 52200 45200 10 line
52200 45200 52400 45200 10 line
52400 45200 52400 45400 10 line
52400 45400 52200 45400 10 line
52300 45500 100 0 360 10 darc
52300 45500 50 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(TP303) ] 0 52450 45450 180.555557 text
grestore
gsave
false false false false 202.222224 [(RS-232 input) ] 0 52450 45264 180.555557 text
grestore
52300 44900 51800 44900 10 line
51800 44900 51800 46800 10 line
gsave
46800 44700 46400 44700 10 line
46800 44600 46400 44600 10 line
46600 44900 46600 44700 10 line
46600 44600 46600 44400 10 line
46600 45200 46600 44900 10 line
46600 44100 46600 44400 10 line
grestore
gsave
false false false false 202.222224 [(C301) ] 0 46900 44700 180.555557 text
grestore
gsave
false false false false 202.222224 [(100n) ] 0 46900 44500 180.555557 text
grestore
gsave
49000 42400 48600 42400 10 line
49000 42300 48600 42300 10 line
48800 42600 48800 42400 10 line
48800 42300 48800 42100 10 line
48800 42900 48800 42600 10 line
48800 41800 48800 42100 10 line
grestore
gsave
false false false false 202.222224 [(C304) ] 0 49000 42400 180.555557 text
grestore
gsave
false false false false 202.222224 [(100n) ] 0 49000 42200 180.555557 text
grestore
gsave
48000 42400 47600 42400 10 line
48000 42300 47600 42300 10 line
47800 42600 47800 42400 10 line
47800 42300 47800 42100 10 line
47800 42900 47800 42600 10 line
47800 41800 47800 42100 10 line
grestore
gsave
false false false false 202.222224 [(C303) ] 0 47200 42400 180.555557 text
grestore
gsave
false false false false 202.222224 [(100n) ] 0 47200 42200 180.555557 text
grestore
gsave
50000 44700 49600 44700 10 line
50000 44600 49600 44600 10 line
49800 44900 49800 44700 10 line
49800 44600 49800 44400 10 line
49800 45200 49800 44900 10 line
49800 44100 49800 44400 10 line
grestore
gsave
false false false false 202.222224 [(C302) ] 0 50100 44700 180.555557 text
grestore
gsave
false false false false 202.222224 [(100n) ] 0 50100 44500 180.555557 text
grestore
gsave
47800 41600 47800 41400 10 line
47950 41400 47650 41400 10 line
47650 41400 47800 41250 10 line
47800 41250 47950 41400 10 line
gsave
false false false false 202.222224 [(bus) ] 0 47900 41200 180.555557 text
grestore
grestore
47800 43100 47800 42900 10 line
47800 41800 47800 41600 10 line
48300 43100 48300 41700 10 line
47800 41700 48800 41700 10 line
48800 42900 48800 43100 10 line
48800 41800 48800 41700 10 line
46600 45200 47200 45200 10 line
46600 44100 47200 44100 10 line
49400 45200 49800 45200 10 line
49400 44100 49800 44100 10 line
gsave
47000 48750 50 0 360 10 darc
47000 48700 47000 48400 10 line
gsave
false false false false 202.222224 [(Vbus) ] 0 46800 48850 180.555557 text
grestore
grestore
gsave
46300 48000 46300 47600 10 line
46400 48000 46400 47600 10 line
46100 47800 46300 47800 10 line
46400 47800 46600 47800 10 line
45800 47800 46100 47800 10 line
46900 47800 46600 47800 10 line
grestore
gsave
false false false false 202.222224 [(C300) ] 0 46300 48100 180.555557 text
grestore
gsave
false false false false 202.222224 [(100n) ] 0 46200 47400 180.555557 text
grestore
gsave
45600 47700 45600 47500 10 line
45750 47500 45450 47500 10 line
45450 47500 45600 47350 10 line
45600 47350 45750 47500 10 line
gsave
false false false false 202.222224 [(bus) ] 0 45700 47300 180.555557 text
grestore
grestore
46900 47800 47200 47800 10 line
47000 48400 47000 47800 10 line
45600 47700 45600 47800 10 line
45600 47800 45800 47800 10 line
gsave
46000 46200 46050 46300 10 line
46050 46300 46150 46100 10 line
46150 46100 46250 46300 10 line
46250 46300 46350 46100 10 line
46350 46100 46450 46300 10 line
46450 46300 46550 46100 10 line
46550 46100 46600 46200 10 line
46900 46200 46600 46200 10 line
45700 46200 46000 46200 10 line
grestore
gsave
false false false false 202.222224 [(R304) ] 0 46200 46400 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.0) ] 0 46200 45900 180.555557 text
grestore
gsave
45600 46000 45600 45800 10 line
45750 45800 45450 45800 10 line
45450 45800 45600 45650 10 line
45600 45650 45750 45800 10 line
gsave
false false false false 202.222224 [(bus) ] 0 45700 45600 180.555557 text
grestore
grestore
45600 46000 45600 46200 10 line
45600 46200 45700 46200 10 line
46900 46200 47200 46200 10 line
gsave
49900 45800 49950 45900 10 line
49950 45900 50050 45700 10 line
50050 45700 50150 45900 10 line
50150 45900 50250 45700 10 line
50250 45700 50350 45900 10 line
50350 45900 50450 45700 10 line
50450 45700 50500 45800 10 line
50800 45800 50500 45800 10 line
49600 45800 49900 45800 10 line
grestore
gsave
false false false false 202.222224 [(R305) ] 0 50100 46000 180.555557 text
grestore
gsave
false false false false 202.222224 [(0.0) ] 0 50100 45500 180.555557 text
grestore
gsave
50800 45600 50800 45400 10 line
50950 45400 50650 45400 10 line
50650 45400 50800 45250 10 line
50800 45250 50950 45400 10 line
gsave
false false false false 202.222224 [(bus) ] 0 50900 45200 180.555557 text
grestore
grestore
49400 45800 49600 45800 10 line
50800 45800 50800 45600 10 line
gsave
42000 46700 42000 46900 10 line
42000 46700 41500 46700 10 line
41500 46700 41400 46800 10 line
41400 46800 41500 46900 10 line
41500 46900 42000 46900 10 line
42300 46800 42000 46800 10 line
grestore
gsave
false false false false 202.222224 [(ttl_rxd:1) ] 0 40700 46750 180.555557 text
grestore
gsave
41400 47300 41400 47100 10 line
41400 47300 41900 47300 10 line
41900 47300 42000 47200 10 line
42000 47200 41900 47100 10 line
41900 47100 41400 47100 10 line
42300 47200 42000 47200 10 line
grestore
gsave
false false false false 202.222224 [(ttl_txd:1) ] 0 40700 47150 180.555557 text
grestore
gsave
44200 47200 44250 47300 10 line
44250 47300 44350 47100 10 line
44350 47100 44450 47300 10 line
44450 47300 44550 47100 10 line
44550 47100 44650 47300 10 line
44650 47300 44750 47100 10 line
44750 47100 44800 47200 10 line
45100 47200 44800 47200 10 line
43900 47200 44200 47200 10 line
grestore
gsave
false false false false 202.222224 [(R300) ] 0 44300 47400 180.555557 text
grestore
gsave
false false false false 202.222224 [(10) ] 0 44400 46900 180.555557 text
grestore
gsave
43400 46800 43450 46900 10 line
43450 46900 43550 46700 10 line
43550 46700 43650 46900 10 line
43650 46900 43750 46700 10 line
43750 46700 43850 46900 10 line
43850 46900 43950 46700 10 line
43950 46700 44000 46800 10 line
44300 46800 44000 46800 10 line
43100 46800 43400 46800 10 line
grestore
gsave
false false false false 202.222224 [(R302) ] 0 43500 47000 180.555557 text
grestore
gsave
false false false false 202.222224 [(10) ] 0 43600 46500 180.555557 text
grestore
gsave
43800 48200 43800 47900 10 line
43700 48400 43700 48200 10 line
43700 48200 43900 48200 10 line
43900 48200 43900 48400 10 line
43900 48400 43700 48400 10 line
43800 48500 100 0 360 10 darc
43800 48500 50 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(TP300) ] 0 43950 48450 180.555557 text
grestore
gsave
false false false false 202.222224 [(TTL TxD) ] 0 43950 48264 180.555557 text
grestore
gsave
43800 45900 43800 45600 10 line
43700 46100 43700 45900 10 line
43700 45900 43900 45900 10 line
43900 45900 43900 46100 10 line
43900 46100 43700 46100 10 line
43800 46200 100 0 360 10 darc
43800 46200 50 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(TP302) ] 0 43950 46150 180.555557 text
grestore
gsave
false false false false 202.222224 [(TTL RxD) ] 0 43950 45964 180.555557 text
grestore
45100 47200 47200 47200 10 line
44300 46800 47200 46800 10 line
42300 47200 43900 47200 10 line
42300 46800 43100 46800 10 line
45300 47200 45300 47900 10 line
45300 47900 43800 47900 10 line
45300 46800 45300 45600 10 line
45300 45600 43800 45600 10 line
gsave
52300 43600 52300 43300 10 line
52200 43800 52200 43600 10 line
52200 43600 52400 43600 10 line
52400 43600 52400 43800 10 line
52400 43800 52200 43800 10 line
52300 43900 100 0 360 10 darc
52300 43900 50 0 360 10 darc
grestore
gsave
false false false false 202.222224 [(TP304) ] 0 52450 43850 180.555557 text
grestore
gsave
false false false false 202.222224 [(Vbus) ] 0 52450 43664 180.555557 text
grestore
gsave
52300 43100 52300 42900 10 line
52450 42900 52150 42900 10 line
52150 42900 52300 42750 10 line
52300 42750 52450 42900 10 line
gsave
false false false false 202.222224 [(bus) ] 0 52400 42700 180.555557 text
grestore
grestore
52300 43300 52300 43100 10 line
60 60 49370 46170 fbox
60 60 47170 45770 fbox
newpath
51800 47200
25
0 360 arc
fill
newpath
51800 46800
25
0 360 arc
fill
newpath
51800 47200
25
0 360 arc
fill
newpath
51800 47200
25
0 360 arc
fill
newpath
51800 46800
25
0 360 arc
fill
newpath
51800 46800
25
0 360 arc
fill
newpath
47800 41700
25
0 360 arc
fill
newpath
48300 41700
25
0 360 arc
fill
newpath
48300 41700
25
0 360 arc
fill
newpath
47800 41700
25
0 360 arc
fill
newpath
47800 41700
25
0 360 arc
fill
newpath
48300 41700
25
0 360 arc
fill
newpath
47000 47800
25
0 360 arc
fill
newpath
47000 47800
25
0 360 arc
fill
newpath
47000 47800
25
0 360 arc
fill
newpath
45300 47200
25
0 360 arc
fill
newpath
45300 46800
25
0 360 arc
fill
newpath
45300 47200
25
0 360 arc
fill
newpath
45300 47200
25
0 360 arc
fill
newpath
45300 46800
25
0 360 arc
fill
newpath
45300 46800
25
0 360 arc
fill
showpage
%%End
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
